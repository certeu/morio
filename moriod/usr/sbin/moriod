#!/bin/bash

# moriod - A cli wrapper around the Morio distribution

show_help() {
    echo "Usage:"
    echo "  moriod [options]"
    echo "  moriod [command]"
    echo ""
    echo "Available Commands:"
    echo "  restart     Restart morio core"
    echo "  start       Start morio core"
    echo "  status      Show (systemd) status of morio core"
    echo "  stop        Stop morio core"
    echo ""
    echo "Options:"
    echo "  -h, --help       Display this help message"
    echo "  -v, --version    Display version information"
    echo ""
    echo "Use \"moriod [command] --help\" for more information about a command."
    exit 0
}

show_restart_help() {
    echo "Description:"
    echo "  Restarts the Morio core service."
    echo ""
    echo "Usage:"
    echo "  moriod restart"
    exit 0
}

show_start_help() {
    echo "Description:"
    echo "  Starts the Morio core service."
    echo ""
    echo "Usage:"
    echo "  moriod start"
    exit 0
}

show_stop_help() {
    echo "Description:"
    echo "  Stops the Morio core service."
    echo ""
    echo "Usage:"
    echo "  moriod stop"
    exit 0
}

show_status_help() {
    echo "Description:"
    echo "  Shows the status of the Morio services."
    echo ""
    echo "Usage:"
    echo "  moriod status"
    exit 0
}

show_version() {
    cat /etc/morio/version
    exit 0
}

change_core_state() {
  local STATE="$1"
  systemctl $STATE moriod
}

check_your_privilege() {
  if [ "$EUID" -eq 0 ]; then
      true
  else
      echo "Morio requires elevated privileges."
      echo "Please use sudo, or run this command as root."
      exit 1
  fi
}

# Parse command-line options
while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help)
      show_help
      ;;
    -v|--version)
      show_version
      ;;
    apt)
      case $2 in
        -h|--help)
        show_apt_help
        ;;
        *)
        check_your_privilege
        add_elastic_repo
      esac
      exit 0
      ;;
    start)
      case $2 in
        -h|--help)
        show_start_help
        ;;
        *)
        check_your_privilege
        change_core_state start
      esac
      exit 0
      ;;
    stop)
      case $2 in
        -h|--help)
        show_stop_help
        ;;
        *)
        check_your_privilege
        change_core_state stop
      esac
      exit 0
      ;;
    restart)
      case $2 in
        -h|--help)
        show_restart_help
        ;;
        *)
        check_your_privilege
        change_core_state restart
      esac
      exit 0
      ;;
    status)
      case $2 in
        -h|--help)
        show_status_help
        ;;
        *)
        check_your_privilege
        change_core_state status
      esac
      exit 0
      ;;
  esac
  shift
done

# If no options were provided, show the general help
if [ $# -eq 0 ]; then
    show_help
fi


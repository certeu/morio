{
  "name": "morio",
  "version": "0.5.0-rc.1",
  "description": "Morio provides the plumbing for your observability needs",
  "license": "EUPL",
  "private": true,
  "repository": {
    "type": "git",
    "url": "git+https://github.com/certeu/morio.git"
  },
  "author": "CERT-EU <services@cert.europa.eu>",
  "bugs": {
    "url": "https://github.com/certeu/morio/issues"
  },
  "homepage": "https://morio.it/",
  "workspaces": [
    "api",
    "config",
    "core",
    "docs",
    "schema",
    "shared",
    "ui"
  ],
  "devDependencies": {
    "dotenv": "^16.4.5",
    "esbuild": "^0.23.1",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-react": "^7.35.2",
    "husky": "^9.1.5",
    "lint-staged": "^15.2.10",
    "nodemon": "^3.1.4",
    "pino-pretty": "^11.2.2",
    "prettier": "^3.3.3",
    "prettyjson": "^1.2.5"
  },
  "engines": {
    "node": ">=20"
  },
  "scripts": {
    "build": "npm run build:dev",
    "build:api": "./scripts/build-container.sh api",
    "build:core": "./scripts/build-container.sh core",
    "build:clients": "./scripts/build-clients.sh",
    "build:dbuilder": "./builders/dbuilder/build-container.sh",
    "build:rbuilder": "./builders/rbuilder/build-container.sh",
    "build:dev": "npm run build:api && npm run build:core && npm run build:ui && npm run build:dbuilder && npm run build:rbuilder",
    "build:prod": "npm run ci:build.api && npm run ci:build.core && npm run ci:build.ui && npm run ci:build.dbuilder && npm run ci:build.rbuilder",
    "build:ui": "./scripts/build-container.sh ui",
    "build:local-release": "./scripts/build-local-release.sh",
    "build:moriod-repo-deb": "./scripts/build-repo-deb.sh",
    "cdp": "npm run check-docs-page",
    "check-docs-page": "./scripts/check-docs-page.sh",
    "check": "./scripts/check-doc.sh",
    "ci:build.api": "./scripts/ci-build-container.sh api",
    "ci:build.core": "./scripts/ci-build-container.sh core",
    "ci:build.dbuilder": "./scripts/ci-build-container.sh dbuilder",
    "ci:build.rbuilder": "./scripts/ci-build-container.sh rbuilder",
    "ci:build.moriod.deb": "./scripts/ci-build-moriod-deb.sh",
    "ci:build.moriod.rpm": "./scripts/ci-build-moriod-rpm.sh",
    "ci:build.morio.aws.debian-12": "./scripts/ci-build-morio-aws-debian-12.sh",
    "ci:build.ui": "./scripts/ci-build-container.sh ui",
    "ci:eslint": "npm run lint",
    "ci:lint-api-spec": "scripts/lint-api-spec.sh",
    "ci:prettier": "npm run prettier",
    "ci:postbuild.morio.aws": "./scripts/ci-postbuild-morio-aws.sh",
    "ci:spellcheck": "./scripts/ci-spellcheck-docs.sh",
    "docker:build.moriod.deb": "./scripts/docker-build-moriod-deb.sh",
    "docker:build.moriod.rpm": "./scripts/docker-build-moriod-rpm.sh",
    "destroy": "./scripts/destroy.sh",
    "dev": "./core/run-dev-container.sh",
    "e2e:ephemeral": "cd ui && npm run test:ephemeral && cd -",
    "get": "node --no-warnings shared/src/cli-get.mjs",
    "help": "cat docs/includes/cli-help-content.mdx",
    "kickstart": "npm install && npm install --global husky && husky install && npm run prebuild",
    "lint": "npm run lint --workspace=core && npm run lint --workspace=api && npm run lint --workspace=ui",
    "lint:api-spec": "scripts/lint-api-spec.sh",
    "logs:api": "docker logs -n 20 -f api | pino-pretty -i pid,time,name,hostname",
    "logs:core": "docker logs -n 20 -f core | pino-pretty -i pid,time,name,hostname",
    "packer:build": "packer build packer",
    "packer:build.aws.debian-12": "packer build packer/aws-debian-12.pkr.hcl",
    "packer:fmt": "packer fmt packer",
    "packer:init": "packer init packer",
    "prebuild": "npm run reconfigure",
    "predev": "npm run reconfigure",
    "prettier": "npx prettier --write .",
    "print:cli.js": "node ./scripts/print-cli-config.mjs",
    "print:cli.sh": "./scripts/print-cli-config.sh",
    "pull-oci": "./scripts/pull-oci-images.sh",
    "reconfigure": "node scripts/reconfigure.mjs",
    "redev": "npm run destroy && npm run dev",
    "reversion": "node scripts/reversion.mjs && npm run reconfigure",
    "rev": "npm run reversion",
    "spellcheck": "./scripts/spellcheck-docs.sh",
    "subscribe": "node --no-warnings scripts/kafka-client.mjs",
    "test": "echo \"No test target specified.\nTry 'npm run test:api' or 'npm run test:core' instead.\" && exit 1",
    "test:api": "npm run redev && sleep 5 && ./api/run-test-container.sh && npm run redev",
    "test:core": "npm run destroy && ./core/run-test-container.sh && npm run redev"
  }
}

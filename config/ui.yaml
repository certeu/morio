# Target-specific configuration
targets:
  production:
    # The image to run in production
    # The specific tag will be added by the reconfigure script
    image: morio/ui
  development:
    # The image to run in development
    # The specific tag will be added by the reconfigure script
    image: morio/ui-dev
    volumes:
      - '{{{ MORIO_REPO_ROOT }}}:/morio'

# General configuration
container:
  # Name it ui
  container_name: morio_ui
  # Tag will be injected
  tag: '{{{ MORIO_VERSION }}}'
  # Use the default network
  networks:
    default: null
  # Run an init inside the container to forward signales (and avoid PID 1)
  init: true
  # Configuration via environment variables
  environment:
    # Listen on port as set in defaults
    PORT: '{{ MORIO_UI_PORT }}'
    # Listen on all hostnames
    HOSTNAME: '0.0.0.0'
  # Configure Traefik with container labels
  labels:
    # Tell traefik to watch this container
    - traefik.enable=true
    # Attach to the morio_net network
    - traefik.docker.network=morio_net
    # Match requests going to the UI prefix (triple curly braces are required here)
    - traefik.http.routers.morio_ui.rule=(PathPrefix(`{{{ MORIO_UI_PREFIX }}}`))
    # Since UI matches / we should give it the lowest priority so other rules match first
    - traefik.http.routers.morio_ui.priority=1
    # Forward to ui service
    - traefik.http.routers.morio_ui.service=morio_ui
    # Only match requests on the https endpoint
    - traefik.http.routers.morio_ui.entrypoints=https
    # Forward to port on container
    - 'traefik.http.services.morio_ui.loadbalancer.server.port={{ MORIO_UI_PORT }}'
    # Enable TLS
    - traefik.http.routers.morio_ui.tls=true
